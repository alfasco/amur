
import{ListWrapper,Map,MapWrapper,StringMapWrapper,isListLikeIterable,iterateListLike}from'../src/facade/collection';import{isBlank}from'../src/facade/lang';export var Headers=(function(){function Headers(headers){var _this=this;if(headers instanceof Headers){this._headersMap=new Map(headers._headersMap);return;}
this._headersMap=new Map();if(isBlank(headers)){return;}
StringMapWrapper.forEach(headers,function(v,k){_this._headersMap.set(normalize(k),isListLikeIterable(v)?v:[v]);});}
Headers.fromResponseHeaderString=function(headersString){var headers=new Headers();headersString.split('\n').forEach(function(line){var index=line.indexOf(':');if(index>0){var key=line.substring(0,index);var value=line.substring(index+1).trim();headers.set(key,value);}});return headers;};Headers.prototype.append=function(name,value){name=normalize(name);var mapName=this._headersMap.get(name);var list=isListLikeIterable(mapName)?mapName:[];list.push(value);this._headersMap.set(name,list);};Headers.prototype.delete=function(name){this._headersMap.delete(normalize(name));};Headers.prototype.forEach=function(fn){this._headersMap.forEach(fn);};Headers.prototype.get=function(header){return ListWrapper.first(this._headersMap.get(normalize(header)));};Headers.prototype.has=function(header){return this._headersMap.has(normalize(header));};Headers.prototype.keys=function(){return MapWrapper.keys(this._headersMap);};Headers.prototype.set=function(header,value){var list=[];if(isListLikeIterable(value)){var pushValue=value.join(',');list.push(pushValue);}
else{list.push(value);}
this._headersMap.set(normalize(header),list);};Headers.prototype.values=function(){return MapWrapper.values(this._headersMap);};Headers.prototype.toJSON=function(){var serializableHeaders={};this._headersMap.forEach(function(values,name){var list=[];iterateListLike(values,function(val){return list=ListWrapper.concat(list,val.split(','));});serializableHeaders[normalize(name)]=list;});return serializableHeaders;};Headers.prototype.getAll=function(header){var headers=this._headersMap.get(normalize(header));return isListLikeIterable(headers)?headers:[];};Headers.prototype.entries=function(){throw new Error('"entries" method is not implemented on Headers class');};return Headers;}());function normalize(name){return name.toLowerCase();}