
var __extends=(this&&this.__extends)||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};import{Injectable}from'@angular/core';import{isPresent,isString}from'../src/facade/lang';import{RequestMethod}from'./enums';import{Headers}from'./headers';import{normalizeMethodName}from'./http_utils';import{URLSearchParams}from'./url_search_params';export var RequestOptions=(function(){function RequestOptions(_a){var _b=_a===void 0?{}:_a,method=_b.method,headers=_b.headers,body=_b.body,url=_b.url,search=_b.search,withCredentials=_b.withCredentials,responseType=_b.responseType;this.method=isPresent(method)?normalizeMethodName(method):null;this.headers=isPresent(headers)?headers:null;this.body=isPresent(body)?body:null;this.url=isPresent(url)?url:null;this.search=isPresent(search)?(isString(search)?new URLSearchParams((search)):(search)):null;this.withCredentials=isPresent(withCredentials)?withCredentials:null;this.responseType=isPresent(responseType)?responseType:null;}
RequestOptions.prototype.merge=function(options){return new RequestOptions({method:isPresent(options)&&isPresent(options.method)?options.method:this.method,headers:isPresent(options)&&isPresent(options.headers)?options.headers:this.headers,body:isPresent(options)&&isPresent(options.body)?options.body:this.body,url:isPresent(options)&&isPresent(options.url)?options.url:this.url,search:isPresent(options)&&isPresent(options.search)?(isString(options.search)?new URLSearchParams((options.search)):(options.search).clone()):this.search,withCredentials:isPresent(options)&&isPresent(options.withCredentials)?options.withCredentials:this.withCredentials,responseType:isPresent(options)&&isPresent(options.responseType)?options.responseType:this.responseType});};return RequestOptions;}());export var BaseRequestOptions=(function(_super){__extends(BaseRequestOptions,_super);function BaseRequestOptions(){_super.call(this,{method:RequestMethod.Get,headers:new Headers()});}
BaseRequestOptions.decorators=[{type:Injectable},];BaseRequestOptions.ctorParameters=[];return BaseRequestOptions;}(RequestOptions));