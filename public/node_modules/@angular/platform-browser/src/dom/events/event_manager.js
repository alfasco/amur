
import{Inject,Injectable,NgZone,OpaqueToken}from'@angular/core';import{ListWrapper}from'../../facade/collection';export var EVENT_MANAGER_PLUGINS=new OpaqueToken('EventManagerPlugins');export var EventManager=(function(){function EventManager(plugins,_zone){var _this=this;this._zone=_zone;plugins.forEach(function(p){return p.manager=_this;});this._plugins=ListWrapper.reversed(plugins);}
EventManager.prototype.addEventListener=function(element,eventName,handler){var plugin=this._findPluginFor(eventName);return plugin.addEventListener(element,eventName,handler);};EventManager.prototype.addGlobalEventListener=function(target,eventName,handler){var plugin=this._findPluginFor(eventName);return plugin.addGlobalEventListener(target,eventName,handler);};EventManager.prototype.getZone=function(){return this._zone;};EventManager.prototype._findPluginFor=function(eventName){var plugins=this._plugins;for(var i=0;i<plugins.length;i++){var plugin=plugins[i];if(plugin.supports(eventName)){return plugin;}}
throw new Error("No event manager plugin found for event "+eventName);};EventManager.decorators=[{type:Injectable},];EventManager.ctorParameters=[{type:Array,decorators:[{type:Inject,args:[EVENT_MANAGER_PLUGINS,]},]},{type:NgZone,},];return EventManager;}());export var EventManagerPlugin=(function(){function EventManagerPlugin(){}
EventManagerPlugin.prototype.supports=function(eventName){return false;};EventManagerPlugin.prototype.addEventListener=function(element,eventName,handler){throw'not implemented';};EventManagerPlugin.prototype.addGlobalEventListener=function(element,eventName,handler){throw'not implemented';};return EventManagerPlugin;}());