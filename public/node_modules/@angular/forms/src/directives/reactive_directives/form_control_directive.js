
var __extends=(this&&this.__extends)||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};import{Directive,Inject,Input,Optional,Output,Self,forwardRef}from'@angular/core';import{EventEmitter}from'../../facade/async';import{StringMapWrapper}from'../../facade/collection';import{NG_ASYNC_VALIDATORS,NG_VALIDATORS}from'../../validators';import{NG_VALUE_ACCESSOR}from'../control_value_accessor';import{NgControl}from'../ng_control';import{ReactiveErrors}from'../reactive_errors';import{composeAsyncValidators,composeValidators,isPropertyUpdated,selectValueAccessor,setUpControl}from'../shared';export var formControlBinding={provide:NgControl,useExisting:forwardRef(function(){return FormControlDirective;})};export var FormControlDirective=(function(_super){__extends(FormControlDirective,_super);function FormControlDirective(validators,asyncValidators,valueAccessors){_super.call(this);this.update=new EventEmitter();this._rawValidators=validators||[];this._rawAsyncValidators=asyncValidators||[];this.valueAccessor=selectValueAccessor(this,valueAccessors);}
Object.defineProperty(FormControlDirective.prototype,"isDisabled",{set:function(isDisabled){ReactiveErrors.disabledAttrWarning();},enumerable:true,configurable:true});FormControlDirective.prototype.ngOnChanges=function(changes){if(this._isControlChanged(changes)){setUpControl(this.form,this);if(this.control.disabled)
this.valueAccessor.setDisabledState(true);this.form.updateValueAndValidity({emitEvent:false});}
if(isPropertyUpdated(changes,this.viewModel)){this.form.setValue(this.model);this.viewModel=this.model;}};Object.defineProperty(FormControlDirective.prototype,"path",{get:function(){return[];},enumerable:true,configurable:true});Object.defineProperty(FormControlDirective.prototype,"validator",{get:function(){return composeValidators(this._rawValidators);},enumerable:true,configurable:true});Object.defineProperty(FormControlDirective.prototype,"asyncValidator",{get:function(){return composeAsyncValidators(this._rawAsyncValidators);},enumerable:true,configurable:true});Object.defineProperty(FormControlDirective.prototype,"control",{get:function(){return this.form;},enumerable:true,configurable:true});FormControlDirective.prototype.viewToModelUpdate=function(newValue){this.viewModel=newValue;this.update.emit(newValue);};FormControlDirective.prototype._isControlChanged=function(changes){return StringMapWrapper.contains(changes,'form');};FormControlDirective.decorators=[{type:Directive,args:[{selector:'[formControl]',providers:[formControlBinding],exportAs:'ngForm'},]},];FormControlDirective.ctorParameters=[{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS,]},]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS,]},]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALUE_ACCESSOR,]},]},];FormControlDirective.propDecorators={'form':[{type:Input,args:['formControl',]},],'model':[{type:Input,args:['ngModel',]},],'update':[{type:Output,args:['ngModelChange',]},],'isDisabled':[{type:Input,args:['disabled',]},],};return FormControlDirective;}(NgControl));