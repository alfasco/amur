
var __extends=(this&&this.__extends)||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};import{Directive,Host,Inject,Input,Optional,Self,SkipSelf,forwardRef}from'@angular/core';import{NG_ASYNC_VALIDATORS,NG_VALIDATORS}from'../../validators';import{AbstractFormGroupDirective}from'../abstract_form_group_directive';import{ControlContainer}from'../control_container';import{ReactiveErrors}from'../reactive_errors';import{composeAsyncValidators,composeValidators,controlPath}from'../shared';import{FormGroupDirective}from'./form_group_directive';export var formGroupNameProvider={provide:ControlContainer,useExisting:forwardRef(function(){return FormGroupName;})};export var FormGroupName=(function(_super){__extends(FormGroupName,_super);function FormGroupName(parent,validators,asyncValidators){_super.call(this);this._parent=parent;this._validators=validators;this._asyncValidators=asyncValidators;}
FormGroupName.prototype._checkParentType=function(){if(_hasInvalidParent(this._parent)){ReactiveErrors.groupParentException();}};FormGroupName.decorators=[{type:Directive,args:[{selector:'[formGroupName]',providers:[formGroupNameProvider]},]},];FormGroupName.ctorParameters=[{type:ControlContainer,decorators:[{type:Optional},{type:Host},{type:SkipSelf},]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS,]},]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS,]},]},];FormGroupName.propDecorators={'name':[{type:Input,args:['formGroupName',]},],};return FormGroupName;}(AbstractFormGroupDirective));export var formArrayNameProvider={provide:ControlContainer,useExisting:forwardRef(function(){return FormArrayName;})};export var FormArrayName=(function(_super){__extends(FormArrayName,_super);function FormArrayName(parent,validators,asyncValidators){_super.call(this);this._parent=parent;this._validators=validators;this._asyncValidators=asyncValidators;}
FormArrayName.prototype.ngOnInit=function(){this._checkParentType();this.formDirective.addFormArray(this);};FormArrayName.prototype.ngOnDestroy=function(){if(this.formDirective){this.formDirective.removeFormArray(this);}};Object.defineProperty(FormArrayName.prototype,"control",{get:function(){return this.formDirective.getFormArray(this);},enumerable:true,configurable:true});Object.defineProperty(FormArrayName.prototype,"formDirective",{get:function(){return this._parent?this._parent.formDirective:null;},enumerable:true,configurable:true});Object.defineProperty(FormArrayName.prototype,"path",{get:function(){return controlPath(this.name,this._parent);},enumerable:true,configurable:true});Object.defineProperty(FormArrayName.prototype,"validator",{get:function(){return composeValidators(this._validators);},enumerable:true,configurable:true});Object.defineProperty(FormArrayName.prototype,"asyncValidator",{get:function(){return composeAsyncValidators(this._asyncValidators);},enumerable:true,configurable:true});FormArrayName.prototype._checkParentType=function(){if(_hasInvalidParent(this._parent)){ReactiveErrors.arrayParentException();}};FormArrayName.decorators=[{type:Directive,args:[{selector:'[formArrayName]',providers:[formArrayNameProvider]},]},];FormArrayName.ctorParameters=[{type:ControlContainer,decorators:[{type:Optional},{type:Host},{type:SkipSelf},]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_VALIDATORS,]},]},{type:Array,decorators:[{type:Optional},{type:Self},{type:Inject,args:[NG_ASYNC_VALIDATORS,]},]},];FormArrayName.propDecorators={'name':[{type:Input,args:['formArrayName',]},],};return FormArrayName;}(ControlContainer));function _hasInvalidParent(parent){return!(parent instanceof FormGroupName)&&!(parent instanceof FormGroupDirective)&&!(parent instanceof FormArrayName);}