
import{Directive,ElementRef,Renderer,forwardRef}from'@angular/core';import{NumberWrapper,isBlank}from'../facade/lang';import{NG_VALUE_ACCESSOR}from'./control_value_accessor';export var NUMBER_VALUE_ACCESSOR={provide:NG_VALUE_ACCESSOR,useExisting:forwardRef(function(){return NumberValueAccessor;}),multi:true};export var NumberValueAccessor=(function(){function NumberValueAccessor(_renderer,_elementRef){this._renderer=_renderer;this._elementRef=_elementRef;this.onChange=function(_){};this.onTouched=function(){};}
NumberValueAccessor.prototype.writeValue=function(value){var normalizedValue=isBlank(value)?'':value;this._renderer.setElementProperty(this._elementRef.nativeElement,'value',normalizedValue);};NumberValueAccessor.prototype.registerOnChange=function(fn){this.onChange=function(value){fn(value==''?null:NumberWrapper.parseFloat(value));};};NumberValueAccessor.prototype.registerOnTouched=function(fn){this.onTouched=fn;};NumberValueAccessor.prototype.setDisabledState=function(isDisabled){this._renderer.setElementProperty(this._elementRef.nativeElement,'disabled',isDisabled);};NumberValueAccessor.decorators=[{type:Directive,args:[{selector:'input[type=number][formControlName],input[type=number][formControl],input[type=number][ngModel]',host:{'(change)':'onChange($event.target.value)','(input)':'onChange($event.target.value)','(blur)':'onTouched()'},providers:[NUMBER_VALUE_ACCESSOR]},]},];NumberValueAccessor.ctorParameters=[{type:Renderer,},{type:ElementRef,},];return NumberValueAccessor;}());