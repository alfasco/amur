
var __extends=(this&&this.__extends)||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};import{NgModuleResolver}from'@angular/compiler';import{Compiler,Injectable,Injector}from'@angular/core';import{Map}from'./facade/collection';export var MockNgModuleResolver=(function(_super){__extends(MockNgModuleResolver,_super);function MockNgModuleResolver(_injector){_super.call(this);this._injector=_injector;this._ngModules=new Map();}
Object.defineProperty(MockNgModuleResolver.prototype,"_compiler",{get:function(){return this._injector.get(Compiler);},enumerable:true,configurable:true});MockNgModuleResolver.prototype._clearCacheFor=function(component){this._compiler.clearCacheFor(component);};MockNgModuleResolver.prototype.setNgModule=function(type,metadata){this._ngModules.set(type,metadata);this._clearCacheFor(type);};MockNgModuleResolver.prototype.resolve=function(type,throwIfNotFound){if(throwIfNotFound===void 0){throwIfNotFound=true;}
var metadata=this._ngModules.get(type);if(!metadata){metadata=_super.prototype.resolve.call(this,type,throwIfNotFound);}
return metadata;};MockNgModuleResolver.decorators=[{type:Injectable},];MockNgModuleResolver.ctorParameters=[{type:Injector,},];return MockNgModuleResolver;}(NgModuleResolver));