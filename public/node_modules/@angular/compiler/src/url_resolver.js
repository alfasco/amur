
import{Inject,Injectable,PACKAGE_ROOT_URL}from'@angular/core';import{StringWrapper,isBlank,isPresent}from'./facade/lang';var _ASSET_SCHEME='asset:';export function createUrlResolverWithoutPackagePrefix(){return new UrlResolver();}
export function createOfflineCompileUrlResolver(){return new UrlResolver(_ASSET_SCHEME);}
export var DEFAULT_PACKAGE_URL_PROVIDER={provide:PACKAGE_ROOT_URL,useValue:'/'};export var UrlResolver=(function(){function UrlResolver(_packagePrefix){if(_packagePrefix===void 0){_packagePrefix=null;}
this._packagePrefix=_packagePrefix;}
UrlResolver.prototype.resolve=function(baseUrl,url){var resolvedUrl=url;if(isPresent(baseUrl)&&baseUrl.length>0){resolvedUrl=_resolveUrl(baseUrl,resolvedUrl);}
var resolvedParts=_split(resolvedUrl);var prefix=this._packagePrefix;if(isPresent(prefix)&&isPresent(resolvedParts)&&resolvedParts[_ComponentIndex.Scheme]=='package'){var path=resolvedParts[_ComponentIndex.Path];if(this._packagePrefix===_ASSET_SCHEME){var pathSegements=path.split(/\//);resolvedUrl="asset:"+pathSegements[0]+"/lib/"+pathSegements.slice(1).join('/');}
else{prefix=StringWrapper.stripRight(prefix,'/');path=StringWrapper.stripLeft(path,'/');return prefix+"/"+path;}}
return resolvedUrl;};UrlResolver.decorators=[{type:Injectable},];UrlResolver.ctorParameters=[{type:undefined,decorators:[{type:Inject,args:[PACKAGE_ROOT_URL,]},]},];return UrlResolver;}());export function getUrlScheme(url){var match=_split(url);return(match&&match[_ComponentIndex.Scheme])||'';}
function _buildFromEncodedParts(opt_scheme,opt_userInfo,opt_domain,opt_port,opt_path,opt_queryData,opt_fragment){var out=[];if(isPresent(opt_scheme)){out.push(opt_scheme+':');}
if(isPresent(opt_domain)){out.push('//');if(isPresent(opt_userInfo)){out.push(opt_userInfo+'@');}
out.push(opt_domain);if(isPresent(opt_port)){out.push(':'+opt_port);}}
if(isPresent(opt_path)){out.push(opt_path);}
if(isPresent(opt_queryData)){out.push('?'+opt_queryData);}
if(isPresent(opt_fragment)){out.push('#'+opt_fragment);}
return out.join('');}
var _splitRe=new RegExp('^'+'(?:'+'([^:/?#.]+)'+':)?'+'(?://'+'(?:([^/?#]*)@)?'+'([\\w\\d\\-\\u0100-\\uffff.%]*)'+'(?::([0-9]+))?'+')?'+'([^?#]+)?'+'(?:\\?([^#]*))?'+'(?:#(.*))?'+'$');var _ComponentIndex;(function(_ComponentIndex){_ComponentIndex[_ComponentIndex["Scheme"]=1]="Scheme";_ComponentIndex[_ComponentIndex["UserInfo"]=2]="UserInfo";_ComponentIndex[_ComponentIndex["Domain"]=3]="Domain";_ComponentIndex[_ComponentIndex["Port"]=4]="Port";_ComponentIndex[_ComponentIndex["Path"]=5]="Path";_ComponentIndex[_ComponentIndex["QueryData"]=6]="QueryData";_ComponentIndex[_ComponentIndex["Fragment"]=7]="Fragment";})(_ComponentIndex||(_ComponentIndex={}));function _split(uri){return uri.match(_splitRe);}
function _removeDotSegments(path){if(path=='/')
return'/';var leadingSlash=path[0]=='/'?'/':'';var trailingSlash=path[path.length-1]==='/'?'/':'';var segments=path.split('/');var out=[];var up=0;for(var pos=0;pos<segments.length;pos++){var segment=segments[pos];switch(segment){case'':case'.':break;case'..':if(out.length>0){out.pop();}
else{up++;}
break;default:out.push(segment);}}
if(leadingSlash==''){while(up-->0){out.unshift('..');}
if(out.length===0)
out.push('.');}
return leadingSlash+out.join('/')+trailingSlash;}
function _joinAndCanonicalizePath(parts){var path=parts[_ComponentIndex.Path];path=isBlank(path)?'':_removeDotSegments(path);parts[_ComponentIndex.Path]=path;return _buildFromEncodedParts(parts[_ComponentIndex.Scheme],parts[_ComponentIndex.UserInfo],parts[_ComponentIndex.Domain],parts[_ComponentIndex.Port],path,parts[_ComponentIndex.QueryData],parts[_ComponentIndex.Fragment]);}
function _resolveUrl(base,url){var parts=_split(encodeURI(url));var baseParts=_split(base);if(isPresent(parts[_ComponentIndex.Scheme])){return _joinAndCanonicalizePath(parts);}
else{parts[_ComponentIndex.Scheme]=baseParts[_ComponentIndex.Scheme];}
for(var i=_ComponentIndex.Scheme;i<=_ComponentIndex.Port;i++){if(isBlank(parts[i])){parts[i]=baseParts[i];}}
if(parts[_ComponentIndex.Path][0]=='/'){return _joinAndCanonicalizePath(parts);}
var path=baseParts[_ComponentIndex.Path];if(isBlank(path))
path='/';var index=path.lastIndexOf('/');path=path.substring(0,index+1)+parts[_ComponentIndex.Path];parts[_ComponentIndex.Path]=path;return _joinAndCanonicalizePath(parts);}