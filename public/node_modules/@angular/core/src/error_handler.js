
export var ErrorHandler=(function(){function ErrorHandler(rethrowError){if(rethrowError===void 0){rethrowError=true;}
this._console=console;this.rethrowError=rethrowError;}
ErrorHandler.prototype.handleError=function(error){var originalError=this._findOriginalError(error);var originalStack=this._findOriginalStack(error);var context=this._findContext(error);this._console.error("EXCEPTION: "+this._extractMessage(error));if(originalError){this._console.error("ORIGINAL EXCEPTION: "+this._extractMessage(originalError));}
if(originalStack){this._console.error('ORIGINAL STACKTRACE:');this._console.error(originalStack);}
if(context){this._console.error('ERROR CONTEXT:');this._console.error(context);}
if(this.rethrowError)
throw error;};ErrorHandler.prototype._extractMessage=function(error){return error instanceof Error?error.message:error.toString();};ErrorHandler.prototype._findContext=function(error){if(error){return error.context?error.context:this._findContext(error.originalError);}
else{return null;}};ErrorHandler.prototype._findOriginalError=function(error){var e=error.originalError;while(e&&e.originalError){e=e.originalError;}
return e;};ErrorHandler.prototype._findOriginalStack=function(error){if(!(error instanceof Error))
return null;var e=error;var stack=e.stack;while(e instanceof Error&&e.originalError){e=e.originalError;if(e instanceof Error&&e.stack){stack=e.stack;}}
return stack;};return ErrorHandler;}());