
import{ListWrapper,StringMapWrapper}from'../facade/collection';import{isPresent}from'../facade/lang';import{FILL_STYLE_FLAG}from'./animation_constants';import{AUTO_STYLE}from'./metadata';export function prepareFinalAnimationStyles(previousStyles,newStyles,nullValue){if(nullValue===void 0){nullValue=null;}
var finalStyles={};StringMapWrapper.forEach(newStyles,function(value,prop){finalStyles[prop]=value==AUTO_STYLE?nullValue:value.toString();});StringMapWrapper.forEach(previousStyles,function(value,prop){if(!isPresent(finalStyles[prop])){finalStyles[prop]=nullValue;}});return finalStyles;}
export function balanceAnimationKeyframes(collectedStyles,finalStateStyles,keyframes){var limit=keyframes.length-1;var firstKeyframe=keyframes[0];var flatenedFirstKeyframeStyles=flattenStyles(firstKeyframe.styles.styles);var extraFirstKeyframeStyles={};var hasExtraFirstStyles=false;StringMapWrapper.forEach(collectedStyles,function(value,prop){if(!flatenedFirstKeyframeStyles[prop]){flatenedFirstKeyframeStyles[prop]=value;extraFirstKeyframeStyles[prop]=value;hasExtraFirstStyles=true;}});var keyframeCollectedStyles=StringMapWrapper.merge({},flatenedFirstKeyframeStyles);var finalKeyframe=keyframes[limit];ListWrapper.insert(finalKeyframe.styles.styles,0,finalStateStyles);var flatenedFinalKeyframeStyles=flattenStyles(finalKeyframe.styles.styles);var extraFinalKeyframeStyles={};var hasExtraFinalStyles=false;StringMapWrapper.forEach(keyframeCollectedStyles,function(value,prop){if(!isPresent(flatenedFinalKeyframeStyles[prop])){extraFinalKeyframeStyles[prop]=AUTO_STYLE;hasExtraFinalStyles=true;}});if(hasExtraFinalStyles){finalKeyframe.styles.styles.push(extraFinalKeyframeStyles);}
StringMapWrapper.forEach(flatenedFinalKeyframeStyles,function(value,prop){if(!isPresent(flatenedFirstKeyframeStyles[prop])){extraFirstKeyframeStyles[prop]=AUTO_STYLE;hasExtraFirstStyles=true;}});if(hasExtraFirstStyles){firstKeyframe.styles.styles.push(extraFirstKeyframeStyles);}
return keyframes;}
export function clearStyles(styles){var finalStyles={};StringMapWrapper.keys(styles).forEach(function(key){finalStyles[key]=null;});return finalStyles;}
export function collectAndResolveStyles(collection,styles){return styles.map(function(entry){var stylesObj={};StringMapWrapper.forEach(entry,function(value,prop){if(value==FILL_STYLE_FLAG){value=collection[prop];if(!isPresent(value)){value=AUTO_STYLE;}}
collection[prop]=value;stylesObj[prop]=value;});return stylesObj;});}
export function renderStyles(element,renderer,styles){StringMapWrapper.forEach(styles,function(value,prop){renderer.setElementStyle(element,prop,value);});}
export function flattenStyles(styles){var finalStyles={};styles.forEach(function(entry){StringMapWrapper.forEach(entry,function(value,prop){finalStyles[prop]=value;});});return finalStyles;}