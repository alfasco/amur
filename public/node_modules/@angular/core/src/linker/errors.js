
var __extends=(this&&this.__extends)||function(d,b){for(var p in b)if(b.hasOwnProperty(p))d[p]=b[p];function __(){this.constructor=d;}
d.prototype=b===null?Object.create(b):(__.prototype=b.prototype,new __());};import{UNINITIALIZED}from'../change_detection/change_detection_util';import{BaseError,WrappedError}from'../facade/errors';export var ExpressionChangedAfterItHasBeenCheckedError=(function(_super){__extends(ExpressionChangedAfterItHasBeenCheckedError,_super);function ExpressionChangedAfterItHasBeenCheckedError(oldValue,currValue){var msg="Expression has changed after it was checked. Previous value: '"+oldValue+"'. Current value: '"+currValue+"'.";if(oldValue===UNINITIALIZED){msg+=" It seems like the view has been created after its parent and its children have been dirty checked."+" Has it been created in a change detection hook ?";}
_super.call(this,msg);}
return ExpressionChangedAfterItHasBeenCheckedError;}(BaseError));export var ViewWrappedError=(function(_super){__extends(ViewWrappedError,_super);function ViewWrappedError(originalError,context){_super.call(this,"Error in "+context.source,originalError);this.context=context;}
return ViewWrappedError;}(WrappedError));export var ViewDestroyedError=(function(_super){__extends(ViewDestroyedError,_super);function ViewDestroyedError(details){_super.call(this,"Attempt to use a destroyed view: "+details);}
return ViewDestroyedError;}(BaseError));