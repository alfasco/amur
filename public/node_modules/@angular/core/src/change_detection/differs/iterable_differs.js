
import{OptionalMetadata,SkipSelfMetadata}from'../../di';import{ListWrapper}from'../../facade/collection';import{getTypeNameForDebugging,isBlank,isPresent}from'../../facade/lang';export var IterableDiffers=(function(){function IterableDiffers(factories){this.factories=factories;}
IterableDiffers.create=function(factories,parent){if(isPresent(parent)){var copied=ListWrapper.clone(parent.factories);factories=factories.concat(copied);return new IterableDiffers(factories);}
else{return new IterableDiffers(factories);}};IterableDiffers.extend=function(factories){return{provide:IterableDiffers,useFactory:function(parent){if(isBlank(parent)){throw new Error('Cannot extend IterableDiffers without a parent injector');}
return IterableDiffers.create(factories,parent);},deps:[[IterableDiffers,new SkipSelfMetadata(),new OptionalMetadata()]]};};IterableDiffers.prototype.find=function(iterable){var factory=this.factories.find(function(f){return f.supports(iterable);});if(isPresent(factory)){return factory;}
else{throw new Error("Cannot find a differ supporting object '"+iterable+"' of type '"+getTypeNameForDebugging(iterable)+"'");}};return IterableDiffers;}());