
import{areIterablesEqual,isListLikeIterable}from'../facade/collection';import{isPrimitive,looseIdentical}from'../facade/lang';export{looseIdentical}from'../facade/lang';export var UNINITIALIZED={toString:function(){return'CD_INIT_VALUE';}};export function devModeEqual(a,b){if(isListLikeIterable(a)&&isListLikeIterable(b)){return areIterablesEqual(a,b,devModeEqual);}
else if(!isListLikeIterable(a)&&!isPrimitive(a)&&!isListLikeIterable(b)&&!isPrimitive(b)){return true;}
else{return looseIdentical(a,b);}}
export var WrappedValue=(function(){function WrappedValue(wrapped){this.wrapped=wrapped;}
WrappedValue.wrap=function(value){return new WrappedValue(value);};return WrappedValue;}());export var ValueUnwrapper=(function(){function ValueUnwrapper(){this.hasWrappedValue=false;}
ValueUnwrapper.prototype.unwrap=function(value){if(value instanceof WrappedValue){this.hasWrappedValue=true;return value.wrapped;}
return value;};ValueUnwrapper.prototype.reset=function(){this.hasWrappedValue=false;};return ValueUnwrapper;}());export var SimpleChange=(function(){function SimpleChange(previousValue,currentValue){this.previousValue=previousValue;this.currentValue=currentValue;}
SimpleChange.prototype.isFirstChange=function(){return this.previousValue===UNINITIALIZED;};return SimpleChange;}());