
import{Attribute,ComponentFactoryResolver,Directive,EventEmitter,Output,ReflectiveInjector,ViewContainerRef}from'@angular/core';import{RouterOutletMap}from'../router_outlet_map';import{PRIMARY_OUTLET}from'../shared';export var RouterOutlet=(function(){function RouterOutlet(parentOutletMap,location,resolver,name){this.parentOutletMap=parentOutletMap;this.location=location;this.resolver=resolver;this.name=name;this.activateEvents=new EventEmitter();this.deactivateEvents=new EventEmitter();parentOutletMap.registerOutlet(name?name:PRIMARY_OUTLET,this);}
RouterOutlet.prototype.ngOnDestroy=function(){this.parentOutletMap.removeOutlet(this.name?this.name:PRIMARY_OUTLET);};Object.defineProperty(RouterOutlet.prototype,"isActivated",{get:function(){return!!this.activated;},enumerable:true,configurable:true});Object.defineProperty(RouterOutlet.prototype,"component",{get:function(){if(!this.activated)
throw new Error('Outlet is not activated');return this.activated.instance;},enumerable:true,configurable:true});Object.defineProperty(RouterOutlet.prototype,"activatedRoute",{get:function(){if(!this.activated)
throw new Error('Outlet is not activated');return this._activatedRoute;},enumerable:true,configurable:true});RouterOutlet.prototype.deactivate=function(){if(this.activated){var c=this.component;this.activated.destroy();this.activated=null;this.deactivateEvents.emit(c);}};RouterOutlet.prototype.activate=function(activatedRoute,loadedResolver,loadedInjector,providers,outletMap){this.outletMap=outletMap;this._activatedRoute=activatedRoute;var snapshot=activatedRoute._futureSnapshot;var component=snapshot._routeConfig.component;var factory;if(loadedResolver){factory=loadedResolver.resolveComponentFactory(component);}
else{factory=this.resolver.resolveComponentFactory(component);}
var injector=loadedInjector?loadedInjector:this.location.parentInjector;var inj=ReflectiveInjector.fromResolvedProviders(providers,injector);this.activated=this.location.createComponent(factory,this.location.length,inj,[]);this.activated.changeDetectorRef.detectChanges();this.activateEvents.emit(this.activated.instance);};RouterOutlet.decorators=[{type:Directive,args:[{selector:'router-outlet'},]},];RouterOutlet.ctorParameters=[{type:RouterOutletMap,},{type:ViewContainerRef,},{type:ComponentFactoryResolver,},{type:undefined,decorators:[{type:Attribute,args:['name',]},]},];RouterOutlet.propDecorators={'activateEvents':[{type:Output,args:['activate',]},],'deactivateEvents':[{type:Output,args:['deactivate',]},],};return RouterOutlet;}());