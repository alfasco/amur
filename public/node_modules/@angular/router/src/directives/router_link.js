
import{LocationStrategy}from'@angular/common';import{Directive,HostBinding,HostListener,Input}from'@angular/core';import{NavigationEnd,Router}from'../router';import{ActivatedRoute}from'../router_state';export var RouterLink=(function(){function RouterLink(router,route,locationStrategy){this.router=router;this.route=route;this.locationStrategy=locationStrategy;this.commands=[];}
Object.defineProperty(RouterLink.prototype,"routerLink",{set:function(data){if(Array.isArray(data)){this.commands=data;}
else{this.commands=[data];}},enumerable:true,configurable:true});RouterLink.prototype.onClick=function(button,ctrlKey,metaKey){if(button!==0||ctrlKey||metaKey){return true;}
this.router.navigateByUrl(this.urlTree);return false;};Object.defineProperty(RouterLink.prototype,"urlTree",{get:function(){return this.router.createUrlTree(this.commands,{relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,preserveQueryParams:toBool(this.preserveQueryParams),preserveFragment:toBool(this.preserveFragment)});},enumerable:true,configurable:true});RouterLink.decorators=[{type:Directive,args:[{selector:':not(a)[routerLink]'},]},];RouterLink.ctorParameters=[{type:Router,},{type:ActivatedRoute,},{type:LocationStrategy,},];RouterLink.propDecorators={'queryParams':[{type:Input},],'fragment':[{type:Input},],'preserveQueryParams':[{type:Input},],'preserveFragment':[{type:Input},],'routerLink':[{type:Input},],'onClick':[{type:HostListener,args:['click',['$event.button','$event.ctrlKey','$event.metaKey'],]},],};return RouterLink;}());export var RouterLinkWithHref=(function(){function RouterLinkWithHref(router,route,locationStrategy){var _this=this;this.router=router;this.route=route;this.locationStrategy=locationStrategy;this.commands=[];this.subscription=router.events.subscribe(function(s){if(s instanceof NavigationEnd){_this.updateTargetUrlAndHref();}});}
Object.defineProperty(RouterLinkWithHref.prototype,"routerLink",{set:function(data){if(Array.isArray(data)){this.commands=data;}
else{this.commands=[data];}},enumerable:true,configurable:true});RouterLinkWithHref.prototype.ngOnChanges=function(changes){this.updateTargetUrlAndHref();};RouterLinkWithHref.prototype.ngOnDestroy=function(){this.subscription.unsubscribe();};RouterLinkWithHref.prototype.onClick=function(button,ctrlKey,metaKey){if(button!==0||ctrlKey||metaKey){return true;}
if(typeof this.target==='string'&&this.target!='_self'){return true;}
this.router.navigateByUrl(this.urlTree);return false;};RouterLinkWithHref.prototype.updateTargetUrlAndHref=function(){this.href=this.locationStrategy.prepareExternalUrl(this.router.serializeUrl(this.urlTree));};Object.defineProperty(RouterLinkWithHref.prototype,"urlTree",{get:function(){return this.router.createUrlTree(this.commands,{relativeTo:this.route,queryParams:this.queryParams,fragment:this.fragment,preserveQueryParams:toBool(this.preserveQueryParams),preserveFragment:toBool(this.preserveFragment)});},enumerable:true,configurable:true});RouterLinkWithHref.decorators=[{type:Directive,args:[{selector:'a[routerLink]'},]},];RouterLinkWithHref.ctorParameters=[{type:Router,},{type:ActivatedRoute,},{type:LocationStrategy,},];RouterLinkWithHref.propDecorators={'target':[{type:Input},],'queryParams':[{type:Input},],'fragment':[{type:Input},],'routerLinkOptions':[{type:Input},],'preserveQueryParams':[{type:Input},],'preserveFragment':[{type:Input},],'href':[{type:HostBinding},],'routerLink':[{type:Input},],'onClick':[{type:HostListener,args:['click',['$event.button','$event.ctrlKey','$event.metaKey'],]},],};return RouterLinkWithHref;}());function toBool(s){if(s==='')
return true;return!!s;}