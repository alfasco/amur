
import{ComponentFactoryResolver,ReflectiveInjector}from'@angular/core';import{Subject}from'rxjs/Subject';import{from}from'rxjs/observable/from';import{of}from'rxjs/observable/of';import{every}from'rxjs/operator/every';import{map}from'rxjs/operator/map';import{mergeAll}from'rxjs/operator/mergeAll';import{mergeMap}from'rxjs/operator/mergeMap';import{reduce}from'rxjs/operator/reduce';import{applyRedirects}from'./apply_redirects';import{validateConfig}from'./config';import{createRouterState}from'./create_router_state';import{createUrlTree}from'./create_url_tree';import{recognize}from'./recognize';import{RouterConfigLoader}from'./router_config_loader';import{RouterOutletMap}from'./router_outlet_map';import{ActivatedRoute,advanceActivatedRoute,createEmptyState}from'./router_state';import{NavigationCancelingError,PRIMARY_OUTLET}from'./shared';import{UrlTree,containsTree,createEmptyUrlTree}from'./url_tree';import{andObservables,forEach,merge,shallowEqual,waitForMap,wrapIntoObservable}from'./utils/collection';export var NavigationStart=(function(){function NavigationStart(id,url){this.id=id;this.url=url;}
NavigationStart.prototype.toString=function(){return"NavigationStart(id: "+this.id+", url: '"+this.url+"')";};return NavigationStart;}());export var NavigationEnd=(function(){function NavigationEnd(id,url,urlAfterRedirects){this.id=id;this.url=url;this.urlAfterRedirects=urlAfterRedirects;}
NavigationEnd.prototype.toString=function(){return"NavigationEnd(id: "+this.id+", url: '"+this.url+"', urlAfterRedirects: '"+this.urlAfterRedirects+"')";};return NavigationEnd;}());export var NavigationCancel=(function(){function NavigationCancel(id,url,reason){this.id=id;this.url=url;this.reason=reason;}
NavigationCancel.prototype.toString=function(){return"NavigationCancel(id: "+this.id+", url: '"+this.url+"')";};return NavigationCancel;}());export var NavigationError=(function(){function NavigationError(id,url,error){this.id=id;this.url=url;this.error=error;}
NavigationError.prototype.toString=function(){return"NavigationError(id: "+this.id+", url: '"+this.url+"', error: "+this.error+")";};return NavigationError;}());export var RoutesRecognized=(function(){function RoutesRecognized(id,url,urlAfterRedirects,state){this.id=id;this.url=url;this.urlAfterRedirects=urlAfterRedirects;this.state=state;}
RoutesRecognized.prototype.toString=function(){return"RoutesRecognized(id: "+this.id+", url: '"+this.url+"', urlAfterRedirects: '"+this.urlAfterRedirects+"', state: "+this.state+")";};return RoutesRecognized;}());function defaultErrorHandler(error){throw error;}
export var Router=(function(){function Router(rootComponentType,urlSerializer,outletMap,location,injector,loader,compiler,config){this.rootComponentType=rootComponentType;this.urlSerializer=urlSerializer;this.outletMap=outletMap;this.location=location;this.injector=injector;this.config=config;this.navigationId=0;this.errorHandler=defaultErrorHandler;this.navigated=false;this.resetConfig(config);this.routerEvents=new Subject();this.currentUrlTree=createEmptyUrlTree();this.configLoader=new RouterConfigLoader(loader,compiler);this.currentRouterState=createEmptyState(this.currentUrlTree,this.rootComponentType);}
Router.prototype.initialNavigation=function(){this.setUpLocationChangeListener();this.navigateByUrl(this.location.path(true),{replaceUrl:true});};Router.prototype.setUpLocationChangeListener=function(){var _this=this;this.locationSubscription=this.location.subscribe(Zone.current.wrap(function(change){var tree=_this.urlSerializer.parse(change['url']);return _this.currentUrlTree.toString()!==tree.toString()?_this.scheduleNavigation(tree,{skipLocationChange:change['pop'],replaceUrl:true}):null;}));};Object.defineProperty(Router.prototype,"routerState",{get:function(){return this.currentRouterState;},enumerable:true,configurable:true});Object.defineProperty(Router.prototype,"url",{get:function(){return this.serializeUrl(this.currentUrlTree);},enumerable:true,configurable:true});Object.defineProperty(Router.prototype,"events",{get:function(){return this.routerEvents;},enumerable:true,configurable:true});Router.prototype.resetConfig=function(config){validateConfig(config);this.config=config;};Router.prototype.ngOnDestroy=function(){this.dispose();};Router.prototype.dispose=function(){this.locationSubscription.unsubscribe();};Router.prototype.createUrlTree=function(commands,_a){var _b=_a===void 0?{}:_a,relativeTo=_b.relativeTo,queryParams=_b.queryParams,fragment=_b.fragment,preserveQueryParams=_b.preserveQueryParams,preserveFragment=_b.preserveFragment;var a=relativeTo?relativeTo:this.routerState.root;var q=preserveQueryParams?this.currentUrlTree.queryParams:queryParams;var f=preserveFragment?this.currentUrlTree.fragment:fragment;return createUrlTree(a,this.currentUrlTree,commands,q,f);};Router.prototype.navigateByUrl=function(url,extras){if(extras===void 0){extras={skipLocationChange:false};}
if(url instanceof UrlTree){return this.scheduleNavigation(url,extras);}
else{var urlTree=this.urlSerializer.parse(url);return this.scheduleNavigation(urlTree,extras);}};Router.prototype.navigate=function(commands,extras){if(extras===void 0){extras={skipLocationChange:false};}
return this.scheduleNavigation(this.createUrlTree(commands,extras),extras);};Router.prototype.serializeUrl=function(url){return this.urlSerializer.serialize(url);};Router.prototype.parseUrl=function(url){return this.urlSerializer.parse(url);};Router.prototype.isActive=function(url,exact){if(url instanceof UrlTree){return containsTree(this.currentUrlTree,url,exact);}
else{var urlTree=this.urlSerializer.parse(url);return containsTree(this.currentUrlTree,urlTree,exact);}};Router.prototype.scheduleNavigation=function(url,extras){var _this=this;var id=++this.navigationId;this.routerEvents.next(new NavigationStart(id,this.serializeUrl(url)));return Promise.resolve().then(function(_){return _this.runNavigate(url,extras.skipLocationChange,extras.replaceUrl,id);});};Router.prototype.runNavigate=function(url,shouldPreventPushState,shouldReplaceUrl,id){var _this=this;if(id!==this.navigationId){this.location.go(this.urlSerializer.serialize(this.currentUrlTree));this.routerEvents.next(new NavigationCancel(id,this.serializeUrl(url),"Navigation ID "+id+" is not equal to the current navigation id "+this.navigationId));return Promise.resolve(false);}
return new Promise(function(resolvePromise,rejectPromise){var state;var navigationIsSuccessful;var preActivation;var appliedUrl;var storedState=_this.currentRouterState;var storedUrl=_this.currentUrlTree;var redirectsApplied$=applyRedirects(_this.injector,_this.configLoader,url,_this.config);var snapshot$=mergeMap.call(redirectsApplied$,function(u){appliedUrl=u;return recognize(_this.rootComponentType,_this.config,appliedUrl,_this.serializeUrl(appliedUrl));});var emitRecognzied$=map.call(snapshot$,function(newRouterStateSnapshot){_this.routerEvents.next(new RoutesRecognized(id,_this.serializeUrl(url),_this.serializeUrl(appliedUrl),newRouterStateSnapshot));return newRouterStateSnapshot;});var routerState$=map.call(emitRecognzied$,function(routerStateSnapshot){return createRouterState(routerStateSnapshot,_this.currentRouterState);});var preactivation$=map.call(routerState$,function(newState){state=newState;preActivation=new PreActivation(state.snapshot,_this.currentRouterState.snapshot,_this.injector);preActivation.traverse(_this.outletMap);});var preactivation2$=mergeMap.call(preactivation$,function(){return preActivation.checkGuards();});var resolveData$=mergeMap.call(preactivation2$,function(shouldActivate){if(shouldActivate){return map.call(preActivation.resolveData(),function(){return shouldActivate;});}
else{return of(shouldActivate);}});resolveData$.forEach(function(shouldActivate){if(!shouldActivate||id!==_this.navigationId){navigationIsSuccessful=false;return;}
_this.currentUrlTree=appliedUrl;_this.currentRouterState=state;if(!shouldPreventPushState){var path=_this.urlSerializer.serialize(appliedUrl);if(_this.location.isCurrentPathEqualTo(path)||shouldReplaceUrl){_this.location.replaceState(path);}
else{_this.location.go(path);}}
new ActivateRoutes(state,storedState).activate(_this.outletMap);navigationIsSuccessful=true;}).then(function(){_this.navigated=true;if(navigationIsSuccessful){_this.routerEvents.next(new NavigationEnd(id,_this.serializeUrl(url),_this.serializeUrl(appliedUrl)));resolvePromise(true);}
else{_this.routerEvents.next(new NavigationCancel(id,_this.serializeUrl(url),''));resolvePromise(false);}},function(e){if(e instanceof NavigationCancelingError){_this.navigated=true;_this.routerEvents.next(new NavigationCancel(id,_this.serializeUrl(url),e.message));resolvePromise(false);}
else{_this.routerEvents.next(new NavigationError(id,_this.serializeUrl(url),e));try{resolvePromise(_this.errorHandler(e));}
catch(ee){rejectPromise(ee);}}
if(id===_this.navigationId){_this.currentRouterState=storedState;_this.currentUrlTree=storedUrl;_this.location.replaceState(_this.serializeUrl(storedUrl));}});});};return Router;}());var CanActivate=(function(){function CanActivate(path){this.path=path;}
Object.defineProperty(CanActivate.prototype,"route",{get:function(){return this.path[this.path.length-1];},enumerable:true,configurable:true});return CanActivate;}());var CanDeactivate=(function(){function CanDeactivate(component,route){this.component=component;this.route=route;}
return CanDeactivate;}());export var PreActivation=(function(){function PreActivation(future,curr,injector){this.future=future;this.curr=curr;this.injector=injector;this.checks=[];}
PreActivation.prototype.traverse=function(parentOutletMap){var futureRoot=this.future._root;var currRoot=this.curr?this.curr._root:null;this.traverseChildRoutes(futureRoot,currRoot,parentOutletMap,[futureRoot.value]);};PreActivation.prototype.checkGuards=function(){var _this=this;if(this.checks.length===0)
return of(true);var checks$=from(this.checks);var runningChecks$=map.call(checks$,function(s){if(s instanceof CanActivate){return andObservables(from([_this.runCanActivateChild(s.path),_this.runCanActivate(s.route)]));}
else if(s instanceof CanDeactivate){var s2=s;return _this.runCanDeactivate(s2.component,s2.route);}
else{throw new Error('Cannot be reached');}});var mergedChecks$=mergeAll.call(runningChecks$);return every.call(mergedChecks$,function(result){return result===true;});};PreActivation.prototype.resolveData=function(){var _this=this;if(this.checks.length===0)
return of(null);var checks$=from(this.checks);var runningChecks$=mergeMap.call(checks$,function(s){if(s instanceof CanActivate){return _this.runResolve(s.route);}
else{return of(null);}});return reduce.call(runningChecks$,function(_,__){return _;});};PreActivation.prototype.traverseChildRoutes=function(futureNode,currNode,outletMap,futurePath){var _this=this;var prevChildren=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this.traverseRoutes(c,prevChildren[c.value.outlet],outletMap,futurePath.concat([c.value]));delete prevChildren[c.value.outlet];});forEach(prevChildren,function(v,k){return _this.deactivateOutletAndItChildren(v,outletMap._outlets[k]);});};PreActivation.prototype.traverseRoutes=function(futureNode,currNode,parentOutletMap,futurePath){var future=futureNode.value;var curr=currNode?currNode.value:null;var outlet=parentOutletMap?parentOutletMap._outlets[futureNode.value.outlet]:null;if(curr&&future._routeConfig===curr._routeConfig){if(!shallowEqual(future.params,curr.params)){this.checks.push(new CanDeactivate(outlet.component,curr),new CanActivate(futurePath));}
else{future.data=curr.data;}
if(future.component){this.traverseChildRoutes(futureNode,currNode,outlet?outlet.outletMap:null,futurePath);}
else{this.traverseChildRoutes(futureNode,currNode,parentOutletMap,futurePath);}}
else{if(curr){if(curr.component){this.deactivateOutletAndItChildren(curr,outlet);}
else{this.deactivateOutletMap(parentOutletMap);}}
this.checks.push(new CanActivate(futurePath));if(future.component){this.traverseChildRoutes(futureNode,null,outlet?outlet.outletMap:null,futurePath);}
else{this.traverseChildRoutes(futureNode,null,parentOutletMap,futurePath);}}};PreActivation.prototype.deactivateOutletAndItChildren=function(route,outlet){if(outlet&&outlet.isActivated){this.deactivateOutletMap(outlet.outletMap);this.checks.push(new CanDeactivate(outlet.component,route));}};PreActivation.prototype.deactivateOutletMap=function(outletMap){var _this=this;forEach(outletMap._outlets,function(v){if(v.isActivated){_this.deactivateOutletAndItChildren(v.activatedRoute.snapshot,v);}});};PreActivation.prototype.runCanActivate=function(future){var _this=this;var canActivate=future._routeConfig?future._routeConfig.canActivate:null;if(!canActivate||canActivate.length===0)
return of(true);var obs=map.call(from(canActivate),function(c){var guard=_this.getToken(c,future);if(guard.canActivate){return wrapIntoObservable(guard.canActivate(future,_this.future));}
else{return wrapIntoObservable(guard(future,_this.future));}});return andObservables(obs);};PreActivation.prototype.runCanActivateChild=function(path){var _this=this;var future=path[path.length-1];var canActivateChildGuards=path.slice(0,path.length-1).reverse().map(function(p){return _this.extractCanActivateChild(p);}).filter(function(_){return _!==null;});return andObservables(map.call(from(canActivateChildGuards),function(d){var obs=map.call(from(d.guards),function(c){var guard=_this.getToken(c,c.node);if(guard.canActivateChild){return wrapIntoObservable(guard.canActivateChild(future,_this.future));}
else{return wrapIntoObservable(guard(future,_this.future));}});return andObservables(obs);}));};PreActivation.prototype.extractCanActivateChild=function(p){var canActivateChild=p._routeConfig?p._routeConfig.canActivateChild:null;if(!canActivateChild||canActivateChild.length===0)
return null;return{node:p,guards:canActivateChild};};PreActivation.prototype.runCanDeactivate=function(component,curr){var _this=this;var canDeactivate=curr&&curr._routeConfig?curr._routeConfig.canDeactivate:null;if(!canDeactivate||canDeactivate.length===0)
return of(true);var canDeactivate$=map.call(from(canDeactivate),function(c){var guard=_this.getToken(c,curr);if(guard.canDeactivate){return wrapIntoObservable(guard.canDeactivate(component,curr,_this.curr));}
else{return wrapIntoObservable(guard(component,curr,_this.curr));}});var merged$=mergeAll.call(canDeactivate$);return every.call(merged$,function(result){return result===true;});};PreActivation.prototype.runResolve=function(future){var resolve=future._resolve;return map.call(this.resolveNode(resolve.current,future),function(resolvedData){resolve.resolvedData=resolvedData;future.data=merge(future.data,resolve.flattenedResolvedData);return null;});};PreActivation.prototype.resolveNode=function(resolve,future){var _this=this;return waitForMap(resolve,function(k,v){var resolver=_this.getToken(v,future);return resolver.resolve?wrapIntoObservable(resolver.resolve(future,_this.future)):wrapIntoObservable(resolver(future,_this.future));});};PreActivation.prototype.getToken=function(token,snapshot){var config=closestLoadedConfig(snapshot);var injector=config?config.injector:this.injector;return injector.get(token);};return PreActivation;}());var ActivateRoutes=(function(){function ActivateRoutes(futureState,currState){this.futureState=futureState;this.currState=currState;}
ActivateRoutes.prototype.activate=function(parentOutletMap){var futureRoot=this.futureState._root;var currRoot=this.currState?this.currState._root:null;advanceActivatedRoute(this.futureState.root);this.activateChildRoutes(futureRoot,currRoot,parentOutletMap);};ActivateRoutes.prototype.activateChildRoutes=function(futureNode,currNode,outletMap){var _this=this;var prevChildren=nodeChildrenAsMap(currNode);futureNode.children.forEach(function(c){_this.activateRoutes(c,prevChildren[c.value.outlet],outletMap);delete prevChildren[c.value.outlet];});forEach(prevChildren,function(v,k){return _this.deactivateOutletAndItChildren(outletMap._outlets[k]);});};ActivateRoutes.prototype.activateRoutes=function(futureNode,currNode,parentOutletMap){var future=futureNode.value;var curr=currNode?currNode.value:null;if(future===curr){advanceActivatedRoute(future);if(future.component){var outlet=getOutlet(parentOutletMap,futureNode.value);this.activateChildRoutes(futureNode,currNode,outlet.outletMap);}
else{this.activateChildRoutes(futureNode,currNode,parentOutletMap);}}
else{if(curr){if(curr.component){var outlet=getOutlet(parentOutletMap,futureNode.value);this.deactivateOutletAndItChildren(outlet);}
else{this.deactivateOutletMap(parentOutletMap);}}
if(future.component){advanceActivatedRoute(future);var outlet=getOutlet(parentOutletMap,futureNode.value);var outletMap=new RouterOutletMap();this.placeComponentIntoOutlet(outletMap,future,outlet);this.activateChildRoutes(futureNode,null,outletMap);}
else{advanceActivatedRoute(future);this.activateChildRoutes(futureNode,null,parentOutletMap);}}};ActivateRoutes.prototype.placeComponentIntoOutlet=function(outletMap,future,outlet){var resolved=[{provide:ActivatedRoute,useValue:future},{provide:RouterOutletMap,useValue:outletMap}];var config=parentLoadedConfig(future.snapshot);var loadedFactoryResolver=null;var loadedInjector=null;if(config){loadedFactoryResolver=config.factoryResolver;loadedInjector=config.injector;resolved.push({provide:ComponentFactoryResolver,useValue:loadedFactoryResolver});}
outlet.activate(future,loadedFactoryResolver,loadedInjector,ReflectiveInjector.resolve(resolved),outletMap);};ActivateRoutes.prototype.deactivateOutletAndItChildren=function(outlet){if(outlet&&outlet.isActivated){this.deactivateOutletMap(outlet.outletMap);outlet.deactivate();}};ActivateRoutes.prototype.deactivateOutletMap=function(outletMap){var _this=this;forEach(outletMap._outlets,function(v){return _this.deactivateOutletAndItChildren(v);});};return ActivateRoutes;}());function parentLoadedConfig(snapshot){var s=snapshot.parent;while(s){var c=s._routeConfig;if(c&&c._loadedConfig)
return c._loadedConfig;if(c&&c.component)
return null;s=s.parent;}
return null;}
function closestLoadedConfig(snapshot){if(!snapshot)
return null;var s=snapshot.parent;while(s){var c=s._routeConfig;if(c&&c._loadedConfig)
return c._loadedConfig;s=s.parent;}
return null;}
function nodeChildrenAsMap(node){return node?node.children.reduce(function(m,c){m[c.value.outlet]=c;return m;},{}):{};}
function getOutlet(outletMap,route){var outlet=outletMap._outlets[route.outlet];if(!outlet){var componentName=route.component.name;if(route.outlet===PRIMARY_OUTLET){throw new Error("Cannot find primary outlet to load '"+componentName+"'");}
else{throw new Error("Cannot find the outlet "+route.outlet+" to load '"+componentName+"'");}}
return outlet;}