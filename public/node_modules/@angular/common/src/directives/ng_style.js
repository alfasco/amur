
import{Directive,ElementRef,Input,KeyValueDiffers,Renderer}from'@angular/core';import{isBlank,isPresent}from'../facade/lang';export var NgStyle=(function(){function NgStyle(_differs,_ngEl,_renderer){this._differs=_differs;this._ngEl=_ngEl;this._renderer=_renderer;}
Object.defineProperty(NgStyle.prototype,"ngStyle",{set:function(v){this._ngStyle=v;if(isBlank(this._differ)&&isPresent(v)){this._differ=this._differs.find(this._ngStyle).create(null);}},enumerable:true,configurable:true});NgStyle.prototype.ngDoCheck=function(){if(isPresent(this._differ)){var changes=this._differ.diff(this._ngStyle);if(isPresent(changes)){this._applyChanges(changes);}}};NgStyle.prototype._applyChanges=function(changes){var _this=this;changes.forEachRemovedItem(function(record){_this._setStyle(record.key,null);});changes.forEachAddedItem(function(record){_this._setStyle(record.key,record.currentValue);});changes.forEachChangedItem(function(record){_this._setStyle(record.key,record.currentValue);});};NgStyle.prototype._setStyle=function(name,val){var nameParts=name.split('.');var nameToSet=nameParts[0];var valToSet=isPresent(val)&&nameParts.length===2?""+val+nameParts[1]:val;this._renderer.setElementStyle(this._ngEl.nativeElement,nameToSet,valToSet);};NgStyle.decorators=[{type:Directive,args:[{selector:'[ngStyle]'},]},];NgStyle.ctorParameters=[{type:KeyValueDiffers,},{type:ElementRef,},{type:Renderer,},];NgStyle.propDecorators={'ngStyle':[{type:Input},],};return NgStyle;}());